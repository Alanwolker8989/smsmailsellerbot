from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, LabeledPrice
from aiogram.filters import CommandStart
import keyboard as kb
from database import save_user, get_user_limit, update_user_limit



router = Router()

#–ù–∞—á–∞–ª–æ
@router.message(CommandStart())
async def start_cmd(message: Message):
    user = message.from_user
    save_user(user.id, user.username or f"user_{user.id}")
    await message.answer(f"""
<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! üëã</b>\n
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å <b>email-—Ä–∞—Å—Å—ã–ª–æ–∫</b>. ‚úâÔ∏è\n
–ú—ã —Å–æ–∑–¥–∞–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç <i>–ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ</i> –æ–±—â–∞—Ç—å—Å—è —Å –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π –ø—Ä—è–º–æ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ Google.\n
<b>–ü—Ä–æ—Å—Ç–æ</b>, <b>—É–¥–æ–±–Ω–æ</b> –∏ <b>—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ</b> ‚Äî –≤—Å—ë, —á—Ç–æ–±—ã –≤–∞—à–∏ –ø–∏—Å—å–º–∞ –¥–æ—Ö–æ–¥–∏–ª–∏ –¥–æ –∞–¥—Ä–µ—Å–∞—Ç–æ–≤ –∏ —Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. üöÄ
""",reply_markup=kb.menu_kb,parse_mode="HTML")

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ FAQ
@router.callback_query(F.data == 'start_sms')
async def choose_sms_mode(callback: CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ–∂–∏–º–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
    await callback.message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞—Å—Å—ã–ª–∫–∏:",
        reply_markup=kb.rass_kb
    )
    await callback.answer()
    
faq_text = """
<b>‚ùì–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:</b>

<b>1. –ó–∞—á–µ–º –Ω—É–∂–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º?</b>
–ß—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π. –í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ ‚Äî 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –≤ –¥–µ–Ω—å.

<b>2. –ß–µ–º –ø–ª–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º –ª—É—á—à–µ?</b>
‚Ä¢ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏

<b>3. –ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–π—Ç–∏ —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –Ω–∞ –ø–ª–∞—Ç–Ω—ã–π?</b>
–î–∞, –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∫–∞–∫ –≤–∞–º —Å—Ç–∞–Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.

<b>4. –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ —ç—Ç–æ?</b>
–î–∞, –≤—Å—ë –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã.
"""    
@router.callback_query(F.data == 'faq_sms')
async def show_faq(callback: CallbackQuery):
    await callback.message.answer(faq_text, parse_mode="HTML")
    await callback.answer()   
     
#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—å
@router.callback_query(F.data == 'profil')
async def show_profile(callback: CallbackQuery):
    user = callback.from_user 
    limit_user = get_user_limit(user.id)
    profile_text = f"""
<b>üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>

<b>–ò–º—è:</b> {user.first_name} {user.last_name or ''}
<b>ID:</b> {user.id}
<b>–ú–æ–∏ –ª–∏–º–∏—Ç—ã:</b> {limit_user}
"""
    await callback.message.edit_text(profile_text, parse_mode="HTML")
    await callback.answer()


